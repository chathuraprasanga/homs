{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HardwareAddEditService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  resolve() {\n    this.getHardwareByID();\n  }\n  getHardwareByID() {\n    // console.log(\"call getHardwareByID\")\n    let hardwareID = sessionStorage.getItem(\"hardwareID\");\n    // console.log(hardwareID)\n    if (hardwareID != null) {\n      this.httpClient.get(`http://localhost:8082/api/v1/hardware/search-hardware/${hardwareID}`).subscribe(hardware => {\n        console.log(hardware);\n      });\n    } else {\n      console.log(\"Hardware ID null\");\n    }\n  }\n}\nHardwareAddEditService.ɵfac = function HardwareAddEditService_Factory(t) {\n  return new (t || HardwareAddEditService)(i0.ɵɵinject(i1.HttpClient));\n};\nHardwareAddEditService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HardwareAddEditService,\n  factory: HardwareAddEditService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,sBAAsB;EAEjCC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;EAAgB;EAE9CC,OAAO;IACL,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAA,eAAe;IACb;IAEA,IAAIC,UAAU,GAAGC,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC;IACrD;IAEA,IAAIF,UAAU,IAAG,IAAI,EAAC;MACpB,IAAI,CAACH,UAAU,CAACM,GAAG,CAAC,yDAAyDH,UAAU,EAAE,CAAC,CACvFI,SAAS,CAAEC,QAAQ,IAAI;QACtBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACvB,CAAC,CAAC;KACL,MAAK;MACJC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;;EAGnC;;AAvBWZ,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAAa,SAAtBb,sBAAsB;EAAAc,YAFrB;AAAM","names":["HardwareAddEditService","constructor","httpClient","resolve","getHardwareByID","hardwareID","sessionStorage","getItem","get","subscribe","hardware","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Chathura Prasanga\\Desktop\\HOM system\\Front-End\\homs\\src\\app\\services\\hardware\\hardware-add-edit.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Resolve} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HardwareAddEditService implements Resolve<any>{\n\n  constructor(private httpClient :HttpClient) { }\n\n  resolve():Observable<any> | Promise<any> | any {\n    this.getHardwareByID();\n  }\n\n  getHardwareByID(){\n    // console.log(\"call getHardwareByID\")\n\n    let hardwareID = sessionStorage.getItem(\"hardwareID\");\n    // console.log(hardwareID)\n\n    if (hardwareID!= null){\n      this.httpClient.get(`http://localhost:8082/api/v1/hardware/search-hardware/${hardwareID}`)\n        .subscribe((hardware) => {\n          console.log(hardware)\n        })\n    }else {\n      console.log(\"Hardware ID null\")\n    }\n\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}