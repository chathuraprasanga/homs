{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let HardwareAddEditService = /*#__PURE__*/(() => {\n  class HardwareAddEditService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.hardware = new BehaviorSubject({});\n    }\n    resolve() {\n      this.getHardwareByID();\n    }\n    getHardwareByID() {\n      // console.log(\"call getHardwareByID\")\n      let hardwareID = sessionStorage.getItem(\"hardwareID\");\n      // console.log(hardwareID)\n      if (hardwareID != null) {\n        this.httpClient.get(`http://localhost:8082/api/v1/hardware/search-hardware/${hardwareID}`).subscribe(hardware => {\n          // console.log(hardware)\n          this.hardware.next(hardware);\n        });\n      } else {\n        // console.log(\"Hardware ID null\")\n        this.hardware.next({});\n      }\n    }\n    saveHardware(hardware) {\n      this.httpClient.post('http://localhost:8082/api/v1/hardware/save-and-update-hardware', hardware).subscribe(hardware => {\n        // console.log(hardware);\n        this.hardware.next(hardware);\n      });\n    }\n  }\n  HardwareAddEditService.ɵfac = function HardwareAddEditService_Factory(t) {\n    return new (t || HardwareAddEditService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  HardwareAddEditService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HardwareAddEditService,\n    factory: HardwareAddEditService.ɵfac,\n    providedIn: 'root'\n  });\n  return HardwareAddEditService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}