{"ast":null,"code":"import { Subject, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let HardwareService = /*#__PURE__*/(() => {\n  class HardwareService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.onHardwaresChange = new Subject();\n    }\n    resolve() {\n      this.getHardwares({});\n      // console.log(\"This is resolve\")\n    }\n\n    getHardwares(hardwareSearchRQ) {\n      //jpa method\n      // this.httpClient.get('http://localhost:8082/api/v1/hardware/get-all-hardware')\n      //   .subscribe((hardwares) => {\n      //     if (hardwares){\n      //       this.onHardwaresChange.next(hardwares)\n      //       // console.log(\"hardwares\",hardwares)\n      //     }\n      //\n      //   });\n      //jdbc method\n      this.httpClient.post('http://localhost:8082/api/v1/hardware/get-all-hardware-jdbc', hardwareSearchRQ).subscribe(hardwares => {\n        if (hardwares) {\n          this.onHardwaresChange.next(hardwares);\n          // console.log(\"hardwares\",hardwares)\n        }\n      });\n    }\n\n    deletehardware(hardwareID) {\n      // console.log(orderID);\n      this.httpClient.delete(\"http://localhost:8082/api/v1/hardware/delete-hardware\" + \"/\" + hardwareID).subscribe(result => {\n        // console.log(\"result\", result)\n        if (result == 'true') {\n          alert(\"Hardware Deleted\");\n          location.reload();\n        }\n      });\n    }\n    handleError(err) {\n      return throwError(err);\n    }\n  }\n  HardwareService.ɵfac = function HardwareService_Factory(t) {\n    return new (t || HardwareService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  HardwareService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HardwareService,\n    factory: HardwareService.ɵfac,\n    providedIn: 'root'\n  });\n  return HardwareService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}