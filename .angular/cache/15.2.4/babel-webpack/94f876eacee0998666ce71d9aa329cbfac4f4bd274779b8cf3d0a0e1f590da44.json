{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/user/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UsersComponent {\n  constructor(userService, router, formBuilder) {\n    this.userService = userService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.users = [];\n    this.userSearchForm = [];\n    this.showFilter = false;\n  }\n  ngOnInit() {\n    this.userService.onUsersChange.subscribe(users => {\n      // console.log(\"hardwares\",hardwares);\n      this.users = users;\n    });\n    this.userSearchForm = this.formBuilder.group({\n      userName: [''],\n      userStatus: ['']\n    });\n  }\n  //get hardware btn\n  // getHardwares() {\n  //   this.hardwareService.getHardwares();\n  // }\n  addEditUser(user) {\n    // console.log(\"hardware\",hardware);\n    if (user != null) {\n      sessionStorage.setItem(\"userID\", user.userID);\n    } else {\n      sessionStorage.removeItem(\"userID\");\n    }\n    this.router.navigate(['/admin/users/add-edit']);\n  }\n  deleteuser(userID) {\n    if (confirm(\"Are you sure to delete record?\"))\n      // console.log(productID);\n      this.userService.deleteUser(userID);\n  }\n  onSearch() {\n    let data = this.userSearchForm.getRawValue();\n    this.userService.getUsers(data);\n    // console.log(data)\n  }\n\n  onClear() {\n    this.userSearchForm.setValue({\n      userName: '',\n      userStatus: ''\n    });\n    this.onSearch();\n  }\n  showHideFilter() {\n    this.showFilter = !this.showFilter;\n  }\n}\nUsersComponent.ɵfac = function UsersComponent_Factory(t) {\n  return new (t || UsersComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nUsersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UsersComponent,\n  selectors: [[\"app-users\"]],\n  decls: 2,\n  vars: 0,\n  template: function UsersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"users works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,cAAc;EAQzBC,YAAoBC,WAAyB,EACzBC,MAAc,EACdC,WAAyB;IAFzB,gBAAW,GAAXF,WAAW;IACX,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IAR/B,UAAK,GAAQ,EAAE;IAEf,mBAAc,GAAQ,EAAE;IAExB,eAAU,GAAW,KAAK;EAKxB;EAEFC,QAAQ;IACN,IAAI,CAACH,WAAW,CAACI,aAAa,CAACC,SAAS,CAAEC,KAAK,IAAI;MACjD;MACA,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;IAEF,IAAI,CAACC,cAAc,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MAC3CC,QAAQ,EAAC,CAAC,EAAE,CAAC;MACbC,UAAU,EAAC,CAAC,EAAE;KACf,CAAC;EACJ;EAEA;EACA;EACA;EACA;EAEAC,WAAW,CAACC,IAAQ;IAClB;IAEA,IAAIA,IAAI,IAAE,IAAI,EAAE;MACdC,cAAc,CAACC,OAAO,CAAC,QAAQ,EAACF,IAAI,CAACG,MAAM,CAAC;KAC7C,MAAK;MACJF,cAAc,CAACG,UAAU,CAAC,QAAQ,CAAC;;IAKrC,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC;EAEjD;EAEAC,UAAU,CAACH,MAAM;IACf,IAAII,OAAO,CAAC,gCAAgC,CAAC;MAC7C;MACE,IAAI,CAACnB,WAAW,CAACoB,UAAU,CAACL,MAAM,CAAC;EAEvC;EAEAM,QAAQ;IACN,IAAIC,IAAI,GAAG,IAAI,CAACf,cAAc,CAACgB,WAAW,EAAE;IAE5C,IAAI,CAACvB,WAAW,CAACwB,QAAQ,CAACF,IAAI,CAAC;IAC/B;EACF;;EAEAG,OAAO;IACL,IAAI,CAAClB,cAAc,CAACmB,QAAQ,CAAC;MAC3BjB,QAAQ,EAAC,EAAE;MACXC,UAAU,EAAC;KAEZ,CAAC;IAEF,IAAI,CAACW,QAAQ,EAAE;EAEjB;EAEAM,cAAc;IACZ,IAAI,CAACC,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;EACpC;;AAxEW9B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA+B;EAAAC;EAAAC;EAAAC;IAAA;MCV3BC,yBAAG;MAAAA,4BAAY;MAAAA,iBAAI","names":["UsersComponent","constructor","userService","router","formBuilder","ngOnInit","onUsersChange","subscribe","users","userSearchForm","group","userName","userStatus","addEditUser","user","sessionStorage","setItem","userID","removeItem","navigate","deleteuser","confirm","deleteUser","onSearch","data","getRawValue","getUsers","onClear","setValue","showHideFilter","showFilter","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Chathura Prasanga\\Desktop\\HOM system\\Front-End\\homs\\src\\app\\components\\user\\users\\users.component.ts","C:\\Users\\Chathura Prasanga\\Desktop\\HOM system\\Front-End\\homs\\src\\app\\components\\user\\users\\users.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {FormBuilder} from \"@angular/forms\";\nimport {UserService} from \"../../../services/user/user.service\";\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit{\n\n  users: any = [];\n\n  userSearchForm : any =[];\n\n  showFilter:boolean = false;\n\n  constructor(private userService : UserService,\n              private router :Router,\n              private formBuilder : FormBuilder\n  ){}\n\n  ngOnInit(): void {\n    this.userService.onUsersChange.subscribe((users) =>{\n      // console.log(\"hardwares\",hardwares);\n      this.users = users;\n    });\n\n    this.userSearchForm = this.formBuilder.group({\n      userName:[''],\n      userStatus:['']\n    });\n  }\n\n  //get hardware btn\n  // getHardwares() {\n  //   this.hardwareService.getHardwares();\n  // }\n\n  addEditUser(user:any){\n    // console.log(\"hardware\",hardware);\n\n    if (user!=null) {\n      sessionStorage.setItem(\"userID\",user.userID);\n    }else {\n      sessionStorage.removeItem(\"userID\");\n    }\n\n\n\n    this.router.navigate(['/admin/users/add-edit'])\n\n  }\n\n  deleteuser(userID){\n    if (confirm(\"Are you sure to delete record?\"))\n    // console.log(productID);\n      this.userService.deleteUser(userID);\n\n  }\n\n  onSearch(){\n    let data = this.userSearchForm.getRawValue();\n\n    this.userService.getUsers(data);\n    // console.log(data)\n  }\n\n  onClear(){\n    this.userSearchForm.setValue({\n      userName:'',\n      userStatus:''\n\n    });\n\n    this.onSearch();\n\n  }\n\n  showHideFilter(){\n    this.showFilter = !this.showFilter\n  }\n\n}\n\n","<p>users works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}