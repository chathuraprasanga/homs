{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserAddEditService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.user = new BehaviorSubject({});\n  }\n  resolve() {\n    this.getUserByID();\n  }\n  getUserByID() {\n    console.log(\"call getHardwareByID\");\n    let userID = sessionStorage.getItem(\"userID\");\n    // console.log(hardwareID)\n    if (userID != null) {\n      this.httpClient.get(`http://localhost:8082/api/v1/user/get-user-by-id/${userID}`).subscribe(user => {\n        // console.log(hardware)\n        this.user.next(user);\n      });\n    } else {\n      // console.log(\"Hardware ID null\")\n      this.user.next({});\n    }\n  }\n  saveUser(user) {\n    this.httpClient.post('http://localhost:8082/api/v1/user/save-and-update-user', user).subscribe(user => {\n      console.log(user);\n      this.user.next(user);\n    });\n  }\n}\nUserAddEditService.ɵfac = function UserAddEditService_Factory(t) {\n  return new (t || UserAddEditService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserAddEditService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserAddEditService,\n  factory: UserAddEditService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAAQA,eAAe,QAAmB,MAAM;;;AAKhD,OAAM,MAAOC,kBAAkB;EAM7BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAH9B,SAAI,GAAG,IAAIH,eAAe,CAAC,EAAE,CAAC;EAGgB;EAE9CI,OAAO;IACL,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAW;IACTC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IAEnC,IAAIC,MAAM,GAAGC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C;IAEA,IAAIF,MAAM,IAAG,IAAI,EAAC;MAChB,IAAI,CAACL,UAAU,CAACQ,GAAG,CAAC,oDAAoDH,MAAM,EAAE,CAAC,CAC9EI,SAAS,CAAEC,IAAI,IAAI;QAClB;QACA,IAAI,CAACA,IAAI,CAACC,IAAI,CAACD,IAAI,CAAC;MACtB,CAAC,CAAC;KACL,MAAK;MACJ;MACA,IAAI,CAACA,IAAI,CAACC,IAAI,CAAC,EAAE,CAAC;;EAGtB;EAEAC,QAAQ,CAACF,IAAU;IACjB,IAAI,CAACV,UAAU,CAACa,IAAI,CAAC,wDAAwD,EAAEH,IAAI,CAAC,CACjFD,SAAS,CAAEC,IAAI,IAAI;MAClBP,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;MACjB,IAAI,CAACA,IAAI,CAACC,IAAI,CAACD,IAAI,CAAC;IACtB,CAAC,CAAC;EACN;;AArCWZ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAgB,SAAlBhB,kBAAkB;EAAAiB,YAFjB;AAAM","names":["BehaviorSubject","UserAddEditService","constructor","httpClient","resolve","getUserByID","console","log","userID","sessionStorage","getItem","get","subscribe","user","next","saveUser","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Chathura Prasanga\\Desktop\\HOM system\\Front-End\\homs\\src\\app\\services\\user\\user-add-edit.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Resolve} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAddEditService implements Resolve<any>{\n\n\n  user = new BehaviorSubject({});\n\n\n  constructor(private httpClient :HttpClient) { }\n\n  resolve():Observable<any> | Promise<any> | any {\n    this.getUserByID();\n  }\n\n  getUserByID(){\n    console.log(\"call getHardwareByID\")\n\n    let userID = sessionStorage.getItem(\"userID\");\n    // console.log(hardwareID)\n\n    if (userID!= null){\n      this.httpClient.get(`http://localhost:8082/api/v1/user/get-user-by-id/${userID}`)\n        .subscribe((user) => {\n          // console.log(hardware)\n          this.user.next(user);\n        })\n    }else {\n      // console.log(\"Hardware ID null\")\n      this.user.next({})\n    }\n\n  }\n\n  saveUser(user : any){\n    this.httpClient.post('http://localhost:8082/api/v1/user/save-and-update-user', user)\n      .subscribe((user) =>{\n        console.log(user);\n        this.user.next(user);\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}