{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrderAddEditService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.order = new BehaviorSubject({});\n    this.onProductsChanged = new Subject();\n    this.onHardwaresChanged = new Subject();\n  }\n  resolve() {\n    this.getOrderByID();\n    this.getAllProducts();\n    this.getAllHardwares();\n  }\n  getOrderByID() {\n    // console.log(\"call getHardwareByID\")\n    let orderID = sessionStorage.getItem(\"orderID\");\n    // console.log(hardwareID)\n    if (orderID != null) {\n      this.httpClient.get(`http://localhost:8082/api/v1/order/search-order/${orderID}`).subscribe(order => {\n        // console.log(hardware)\n        this.order.next(order);\n      });\n    } else {\n      // console.log(\"Hardware ID null\")\n      this.order.next({});\n    }\n  }\n  getAllProducts() {\n    this.httpClient.get('`http://localhost:8082/api/v1/product/get-all-product');\n  }\n  getAllHardwares() {\n    this.httpClient.get(`http://localhost:8082/api/v1/hardware/get-all-hardware`);\n  }\n}\nOrderAddEditService.ɵfac = function OrderAddEditService_Factory(t) {\n  return new (t || OrderAddEditService)(i0.ɵɵinject(i1.HttpClient));\n};\nOrderAddEditService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrderAddEditService,\n  factory: OrderAddEditService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAAQA,eAAe,QAAO,MAAM;AAEpC,SAAQC,OAAO,QAAO,MAAM;;;AAK5B,OAAM,MAAOC,mBAAmB;EAQ9BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAL9B,UAAK,GAAG,IAAIJ,eAAe,CAAC,EAAE,CAAC;IAC/B,sBAAiB,GAAG,IAAIC,OAAO,EAAE;IACjC,uBAAkB,GAAG,IAAIA,OAAO,EAAE;EAGY;EAE9CI,OAAO;IACL,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAF,YAAY;IACV;IAEA,IAAIG,OAAO,GAAGC,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC;IAC/C;IAEA,IAAIF,OAAO,IAAG,IAAI,EAAC;MACjB,IAAI,CAACL,UAAU,CAACQ,GAAG,CAAC,mDAAmDH,OAAO,EAAE,CAAC,CAC9EI,SAAS,CAAEC,KAAK,IAAI;QACnB;QACA,IAAI,CAACA,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC;MACxB,CAAC,CAAC;KACL,MAAK;MACJ;MACA,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,EAAE,CAAC;;EAGvB;EAEAR,cAAc;IACZ,IAAI,CAACH,UAAU,CAACQ,GAAG,CAAC,uDAAuD,CAAC;EAC9E;EAGAJ,eAAe;IACb,IAAI,CAACJ,UAAU,CAACQ,GAAG,CAAC,wDAAwD,CAAC;EAC/E;;AA1CWV,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAc,SAAnBd,mBAAmB;EAAAe,YAFlB;AAAM","names":["BehaviorSubject","Subject","OrderAddEditService","constructor","httpClient","resolve","getOrderByID","getAllProducts","getAllHardwares","orderID","sessionStorage","getItem","get","subscribe","order","next","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Chathura Prasanga\\Desktop\\HOM system\\Front-End\\homs\\src\\app\\services\\order\\order-add-edit.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Resolve} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {Observable} from \"rxjs\";\nimport {Subject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderAddEditService implements Resolve<any>{\n\n\n  order = new BehaviorSubject({});\n  onProductsChanged = new Subject();\n  onHardwaresChanged = new Subject();\n\n\n  constructor(private httpClient :HttpClient) { }\n\n  resolve():Observable<any> | Promise<any> | any {\n    this.getOrderByID();\n    this.getAllProducts();\n    this.getAllHardwares();\n  }\n\n  getOrderByID(){\n    // console.log(\"call getHardwareByID\")\n\n    let orderID = sessionStorage.getItem(\"orderID\");\n    // console.log(hardwareID)\n\n    if (orderID!= null){\n      this.httpClient.get(`http://localhost:8082/api/v1/order/search-order/${orderID}`)\n        .subscribe((order) => {\n          // console.log(hardware)\n          this.order.next(order);\n        })\n    }else {\n      // console.log(\"Hardware ID null\")\n      this.order.next({})\n    }\n\n  }\n\n  getAllProducts(){\n    this.httpClient.get('`http://localhost:8082/api/v1/product/get-all-product')\n  }\n\n\n  getAllHardwares(){\n    this.httpClient.get(`http://localhost:8082/api/v1/hardware/get-all-hardware`)\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}