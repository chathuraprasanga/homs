{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { OrderDTO } from \"../dto/OrderDTO\";\nimport { Subscription } from \"rxjs\";\nimport * as _ from 'underscore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/order/order-add-edit.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/progress-bar\";\nfunction OrderAddEditComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"h1\");\n    i0.ɵɵtext(2, \"Edit Order\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction OrderAddEditComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"h1\");\n    i0.ɵɵtext(2, \"New Order\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction OrderAddEditComponent_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1, \"CASH\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class OrderAddEditComponent {\n  constructor(orderAddEditService, formBuilder) {\n    this.orderAddEditService = orderAddEditService;\n    this.formBuilder = formBuilder;\n    this.order = new OrderDTO();\n    this.products = [];\n    this.hardwares = [];\n    this.onOrderChangeSub = new Subscription();\n  }\n  ngOnInit() {\n    this.orderAddEditService.onProductsChanged.subscribe(products => {\n      // console.log(\"products\",products)\n      this.products = products;\n    });\n    this.orderAddEditService.onHardwaresChanged.subscribe(hardwares => {\n      // console.log(\"hardwares\",hardwares)\n      this.hardwares = hardwares;\n    });\n    this.onOrderChangeSub = this.orderAddEditService.order.subscribe(order => {\n      if (!_.isEmpty(order)) {\n        console.log(order);\n        this.order = new OrderDTO(order);\n        this.pageType = 'edit';\n      } else {\n        this.order = new OrderDTO(order);\n        this.pageType = 'new';\n      }\n      // console.log(\"hardware\" , this.hardware)\n      this.orderForm = this.createForm();\n    });\n  }\n  ngOnDestroy() {\n    this.onOrderChangeSub.unsubscribe();\n  }\n  createForm() {\n    return this.formBuilder.group({\n      orderID: [this.order.orderID],\n      invoiceNumber: [this.order.invoiceNumber, [Validators.required]],\n      orderDate: [this.order.orderDate],\n      hardwareName: [this.order.hardwareName],\n      productCode: [this.order.productCode],\n      orderQuantity: [this.order.orderQuantity],\n      orderAmount: [this.order.orderAmount],\n      paymentMethod: [this.order.paymentMethod],\n      paymentStatus: [this.order.paymentStatus]\n    });\n  }\n}\nOrderAddEditComponent.ɵfac = function OrderAddEditComponent_Factory(t) {\n  return new (t || OrderAddEditComponent)(i0.ɵɵdirectiveInject(i1.OrderAddEditService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nOrderAddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OrderAddEditComponent,\n  selectors: [[\"app-order-add-edit\"]],\n  decls: 62,\n  vars: 4,\n  consts: [[1, \"example-card\"], [4, \"ngIf\"], [3, \"formGroup\"], [1, \"d-flex\", \"justify-content-around\"], [1, \"mb-3\", 2, \"width\", \"98%\", \"margin-left\", \"1%\"], [1, \"form-label\"], [\"placeholder\", \"Ex: WD00XX\", \"formControlName\", \"invoiceNumber\", 1, \"form-control\"], [2, \"width\", \"98%\", \"margin-left\", \"1%\", \"margin-right\", \"1%\"], [\"type\", \"date\", \"formControlName\", \"orderDate\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Ex: Test Hardware\", \"formControlName\", \"hardwareName\", 1, \"form-control\"], [1, \"mb-3\", 2, \"width\", \"32%\"], [\"aria-label\", \"Default select example\", \"formControlName\", \"productCode\", 1, \"form-select\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"email\", \"placeholder\", \"Ex: 500\", \"formControlName\", \"orderQuantity\", 1, \"form-control\"], [\"type\", \"email\", \"placeholder\", \"Ex: 15000\", \"formControlName\", \"orderAmount\", 1, \"form-control\"], [1, \"d-flex\", \"justify-content-between\", 2, \"margin-bottom\", \"2%\", \"width\", \"99%\"], [2, \"width\", \"48%\", \"margin-left\", \"1%\"], [\"aria-label\", \"Default select example\", \"formControlName\", \"paymentMethod\", 1, \"form-select\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"aria-label\", \"Default select example\", \"formControlName\", \"paymentStatus\", 1, \"form-select\"], [2, \"width\", \"8%\", \"margin-right\", \"1%\", \"margin-bottom\", \"2%\", \"float\", \"right\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\"], [\"mode\", \"indeterminate\"]],\n  template: function OrderAddEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"order-add-edit works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"mat-card\", 0)(3, \"mat-card-header\")(4, \"mat-card-title\");\n      i0.ɵɵtemplate(5, OrderAddEditComponent_span_5_Template, 3, 0, \"span\", 1);\n      i0.ɵɵtemplate(6, OrderAddEditComponent_span_6_Template, 3, 0, \"span\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"mat-card-content\")(9, \"form\", 2)(10, \"div\", 3)(11, \"div\", 4)(12, \"label\", 5);\n      i0.ɵɵtext(13, \"Invoice Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 7)(16, \"label\", 5);\n      i0.ɵɵtext(17, \" Order Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"label\", 5);\n      i0.ɵɵtext(21, \"Hardware Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 3)(24, \"div\", 10)(25, \"label\", 5);\n      i0.ɵɵtext(26, \"Product Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"select\", 11);\n      i0.ɵɵtemplate(28, OrderAddEditComponent_option_28_Template, 2, 0, \"option\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 10)(30, \"label\", 5);\n      i0.ɵɵtext(31, \"Product Quantity\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 10)(34, \"label\", 5);\n      i0.ɵɵtext(35, \"Product Amount\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\", 15)(38, \"div\", 16)(39, \"label\", 5);\n      i0.ɵɵtext(40, \"Payment Method\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"select\", 17)(42, \"option\", 18);\n      i0.ɵɵtext(43, \"CASH\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"option\", 19);\n      i0.ɵɵtext(45, \"CHEQUE\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"option\", 19);\n      i0.ɵɵtext(47, \"CREDIT\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(48, \"div\", 16)(49, \"label\", 5);\n      i0.ɵɵtext(50, \"Payment Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"select\", 20)(52, \"option\", 18);\n      i0.ɵɵtext(53, \"PAID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"option\", 19);\n      i0.ɵɵtext(55, \"NOT PAID\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(56, \"div\", 21)(57, \"div\")(58, \"button\", 22);\n      i0.ɵɵtext(59, \"Save\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(60, \"mat-card-footer\");\n      i0.ɵɵelement(61, \"mat-progress-bar\", 23);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.pageType == \"edit\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.pageType == \"new\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.orderForm);\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", ctx.products);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i4.MatCard, i4.MatCardContent, i4.MatCardFooter, i4.MatCardHeader, i4.MatCardTitle, i5.MatProgressBar],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","OrderDTO","Subscription","_","i0","OrderAddEditComponent","constructor","orderAddEditService","formBuilder","ngOnInit","onProductsChanged","subscribe","products","onHardwaresChanged","hardwares","onOrderChangeSub","order","isEmpty","console","log","pageType","orderForm","createForm","ngOnDestroy","unsubscribe","group","orderID","invoiceNumber","required","orderDate","hardwareName","productCode","orderQuantity","orderAmount","paymentMethod","paymentStatus","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Chathura Prasanga\\Desktop\\HOM system\\Front-End\\homs\\src\\app\\components\\order\\order-add-edit\\order-add-edit.component.ts","C:\\Users\\Chathura Prasanga\\Desktop\\HOM system\\Front-End\\homs\\src\\app\\components\\order\\order-add-edit\\order-add-edit.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {OrderDTO} from \"../dto/OrderDTO\";\nimport {Subscription} from \"rxjs\";\nimport {OrderAddEditService} from \"../../../services/order/order-add-edit.service\";\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-order-add-edit',\n  templateUrl: './order-add-edit.component.html',\n  styleUrls: ['./order-add-edit.component.css']\n})\nexport class OrderAddEditComponent implements OnInit,OnDestroy{\n\n\n  orderForm : FormGroup;\n  order = new OrderDTO();\n  pageType: string;\n  products: any = [];\n  hardwares: any = [];\n\n  onOrderChangeSub = new Subscription();\n\n  constructor(\n    private orderAddEditService : OrderAddEditService,\n    private formBuilder : FormBuilder\n\n  ){}\n\n  ngOnInit(): void {\n\n    this.orderAddEditService.onProductsChanged\n      .subscribe((products)=>{\n        // console.log(\"products\",products)\n        this.products = products;\n      });\n\n    this.orderAddEditService.onHardwaresChanged\n      .subscribe((hardwares)=>{\n        // console.log(\"hardwares\",hardwares)\n        this.hardwares = hardwares;\n      });\n\n    this.onOrderChangeSub = this.orderAddEditService.order\n      .subscribe((order) => {\n        if (!_.isEmpty(order)){\n          console.log(order);\n          this.order = new OrderDTO(order);\n          this.pageType ='edit';\n        }else {\n          this.order = new OrderDTO(order);\n          this.pageType = 'new';\n        }\n        // console.log(\"hardware\" , this.hardware)\n        this.orderForm = this.createForm();\n      })\n  }\n\n  ngOnDestroy(): void {\n    this.onOrderChangeSub.unsubscribe();\n  }\n\n  createForm(){\n    return this.formBuilder.group({\n      orderID: [this.order.orderID],\n      invoiceNumber: [this.order.invoiceNumber,[Validators.required]],\n      orderDate : [this.order.orderDate],\n      hardwareName : [this.order.hardwareName],\n      productCode : [this.order.productCode],\n      orderQuantity : [this.order.orderQuantity],\n      orderAmount : [this.order.orderAmount],\n      paymentMethod : [this.order.paymentMethod],\n      paymentStatus : [this.order.paymentStatus]\n    })\n  }\n\n}\n","<p>order-add-edit works!</p>\n\n<mat-card class=\"example-card\" >\n\n  <mat-card-header>\n    <mat-card-title>\n\n      <span *ngIf=\"pageType == 'edit'\">\n        <h1>Edit Order</h1>\n      </span>\n      <span *ngIf=\"pageType == 'new'\">\n        <h1>New Order</h1>\n      </span>\n\n    </mat-card-title>\n  </mat-card-header>\n\n  <br>\n\n  <mat-card-content>\n\n    <form [formGroup]=\"orderForm\">\n\n      <div class=\"d-flex justify-content-around\">\n\n      <div class=\"mb-3\" style=\"width: 98%;margin-left: 1%\">\n        <label  class=\"form-label\">Invoice Number</label>\n        <input class=\"form-control\"  placeholder=\"Ex: WD00XX\" formControlName=\"invoiceNumber\">\n      </div>\n      <div style=\"width: 98%;margin-left: 1%; margin-right: 1%\">\n        <label  class=\"form-label\"> Order Date</label>\n        <input class=\"form-control\"  class=\"form-control\" type=\"date\" formControlName=\"orderDate\"/>\n      </div>\n\n\n      </div>\n\n      <div class=\"mb-3\" style=\"width: 98%; margin-left: 1%\">\n        <label  class=\"form-label\">Hardware Name</label>\n        <input type=\"text\" class=\"form-control\"  placeholder=\"Ex: Test Hardware\" formControlName=\"hardwareName\">\n      </div>\n\n      <div class=\"d-flex justify-content-around\">\n\n\n          <div class=\"mb-3\" style=\"width: 32%\">\n            <label  class=\"form-label\">Product Code</label>\n            <select class=\"form-select\" aria-label=\"Default select example\" formControlName=\"productCode\">\n            <option *ngFor=\"let product of products\">CASH</option>\n            </select>\n          </div>\n          <div class=\"mb-3\" style=\"width: 32%\">\n            <label  class=\"form-label\">Product Quantity</label>\n            <input type=\"email\" class=\"form-control\"  placeholder=\"Ex: 500\" formControlName=\"orderQuantity\">\n          </div>\n          <div class=\"mb-3\" style=\"width: 32%\">\n            <label  class=\"form-label\">Product Amount</label>\n            <input type=\"email\" class=\"form-control\"  placeholder=\"Ex: 15000\" formControlName=\"orderAmount\">\n          </div>\n\n      </div>\n\n      <div style=\"margin-bottom: 2%;width: 99%\" class=\"d-flex justify-content-between\">\n\n        <div style=\"width: 48%; margin-left: 1%\">\n          <label  class=\"form-label\">Payment Method</label>\n          <select class=\"form-select\" aria-label=\"Default select example\" formControlName=\"paymentMethod\">\n            <option value=\"1\">CASH</option>\n            <option value=\"2\">CHEQUE</option>\n            <option value=\"2\">CREDIT</option>\n          </select>\n        </div>\n        <div style=\"width: 48%; margin-left: 1%\">\n          <label  class=\"form-label\">Payment Status</label>\n          <select class=\"form-select\" aria-label=\"Default select example\" formControlName=\"paymentStatus\">\n            <option value=\"1\">PAID</option>\n            <option value=\"2\">NOT PAID</option>\n          </select>\n        </div>\n\n      </div>\n\n      <div style=\"width: 8%; margin-right: 1%;margin-bottom: 2%;float: right\">\n        <div>\n          <button type=\"button\" class=\"btn btn-primary\">Save</button>\n        </div>\n      </div>\n\n\n    </form>\n\n  </mat-card-content>\n\n  <mat-card-footer>\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n  </mat-card-footer>\n</mat-card>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}