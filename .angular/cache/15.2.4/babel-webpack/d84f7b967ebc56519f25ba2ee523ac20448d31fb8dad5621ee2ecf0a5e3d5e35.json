{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DashboardService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.dashboardValues = new Subject();\n  }\n  resolve() {}\n  getValues() {\n    //JDBC Method\n    this.httpClient.get(`http://localhost:8082/api/v1/dashboard/get-all-value-jdbc`).subscribe(values => {\n      if (values) {\n        this.dashboardValues.next(values);\n        console.log(\"values\", values);\n      }\n    });\n  }\n}\nDashboardService.ɵfac = function DashboardService_Factory(t) {\n  return new (t || DashboardService)(i0.ɵɵinject(i1.HttpClient));\n};\nDashboardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DashboardService,\n  factory: DashboardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,OAAO,QAAO,MAAM;;;AAOxC,OAAM,MAAOC,gBAAgB;EAI3BC,YACYC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAHtB,oBAAe,GAAG,IAAIH,OAAO,EAAE;EAI3B;EAEJI,OAAO,IAEP;EAGAC,SAAS;IACP;IACA,IAAI,CAACF,UAAU,CAACG,GAAG,CAAC,2DAA2D,CAAC,CAC7EC,SAAS,CAAEC,MAAM,IAAI;MAEpB,IAAIA,MAAM,EAAC;QACT,IAAI,CAACC,eAAe,CAACC,IAAI,CAACF,MAAM,CAAC;QACjCG,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACJ,MAAM,CAAC;;IAGhC,CAAC,CAAC;EAEN;;AAzBWP,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAY,SAAhBZ,gBAAgB;EAAAa,YAFf;AAAM","names":["Subject","DashboardService","constructor","httpClient","resolve","getValues","get","subscribe","values","dashboardValues","next","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Chathura Prasanga\\Desktop\\HOM system\\Front-End\\homs\\src\\app\\services\\dashboard\\dashboard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {observable, Subject} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  dashboardValues = new Subject();\n\n  constructor(\n      private httpClient: HttpClient\n  ) { }\n\n  resolve(): observable<any> | promise<any> | any{\n\n  }\n\n\n  getValues(){\n    //JDBC Method\n    this.httpClient.get(`http://localhost:8082/api/v1/dashboard/get-all-value-jdbc`)\n      .subscribe((values) => {\n\n        if (values){\n          this.dashboardValues.next(values);\n          console.log(\"values\",values)\n        }\n\n      })\n\n  }\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}