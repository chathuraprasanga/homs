{"ast":null,"code":"import { Subscription } from \"rxjs\";\nimport { HardwareDTO } from \"../dto/hardware\";\nimport * as _ from 'underscore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/hardware/hardware-add-edit.service\";\nimport * as i2 from \"@angular/forms\";\nexport class HardwareAddEditComponent {\n  constructor(hardwareAddEditService, formBuilder) {\n    this.hardwareAddEditService = hardwareAddEditService;\n    this.formBuilder = formBuilder;\n    this.hardware = new HardwareDTO();\n    this.onHardwareChangeSub = new Subscription();\n  }\n  ngOnInit() {\n    this.onHardwareChangeSub = this.hardwareAddEditService.hardware.subscribe(hardware => {\n      if (!_.isEmpty(hardware)) {\n        this.hardware = new HardwareDTO(hardware);\n      } else {\n        this.hardware = new HardwareDTO();\n      }\n      // console.log(\"hardware\" , this.hardware)\n      this.hardwareForm = this.createForm();\n    });\n  }\n  ngOnDestroy() {\n    this.onHardwareChangeSub.unsubscribe();\n  }\n  createForm() {\n    return this.formBuilder.group({\n      hardwareID: [this.hardware.hardwareID],\n      hardwareName: [this.hardware.hardwareName],\n      hardwareAddress: [this.hardware.hardwareAddress],\n      hardwareTel: [this.hardware.hardwareTel],\n      hardwareEmail: [this.hardware.hardwareEmail],\n      hardwareStatus: [this.hardware.hardwareStatus]\n    });\n  }\n}\nHardwareAddEditComponent.ɵfac = function HardwareAddEditComponent_Factory(t) {\n  return new (t || HardwareAddEditComponent)(i0.ɵɵdirectiveInject(i1.HardwareAddEditService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nHardwareAddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HardwareAddEditComponent,\n  selectors: [[\"app-hardware-add-edit\"]],\n  decls: 2,\n  vars: 0,\n  template: function HardwareAddEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"hardware-add-edit works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAQA,YAAY,QAAO,MAAM;AAEjC,SAAQC,WAAW,QAAO,iBAAiB;AAC3C,OAAO,KAAKC,CAAC,MAAM,YAAY;;;;AAO/B,OAAM,MAAOC,wBAAwB;EAOnCC,YACUC,sBAA+C,EAC/CC,WAAyB;IADzB,2BAAsB,GAAtBD,sBAAsB;IACtB,gBAAW,GAAXC,WAAW;IANrB,aAAQ,GAAG,IAAIL,WAAW,EAAE;IAE5B,wBAAmB,GAAG,IAAID,YAAY,EAAE;EAMtC;EAEFO,QAAQ;IACN,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACH,sBAAsB,CAACI,QAAQ,CAC5DC,SAAS,CAAED,QAAQ,IAAI;MACtB,IAAI,CAACP,CAAC,CAACS,OAAO,CAACF,QAAQ,CAAC,EAAC;QACvB,IAAI,CAACA,QAAQ,GAAG,IAAIR,WAAW,CAACQ,QAAQ,CAAC;OAC1C,MAAK;QACJ,IAAI,CAACA,QAAQ,GAAG,IAAIR,WAAW,EAAE;;MAErC;MACE,IAAI,CAACW,YAAY,GAAG,IAAI,CAACC,UAAU,EAAE;IACzC,CAAC,CAAC;EACJ;EAEAC,WAAW;IACT,IAAI,CAACN,mBAAmB,CAACO,WAAW,EAAE;EACxC;EAEAF,UAAU;IACR,OAAO,IAAI,CAACP,WAAW,CAACU,KAAK,CAAC;MAC5BC,UAAU,EAAE,CAAC,IAAI,CAACR,QAAQ,CAACQ,UAAU,CAAC;MACtCC,YAAY,EAAE,CAAC,IAAI,CAACT,QAAQ,CAACS,YAAY,CAAC;MAC1CC,eAAe,EAAG,CAAC,IAAI,CAACV,QAAQ,CAACU,eAAe,CAAC;MACjDC,WAAW,EAAG,CAAC,IAAI,CAACX,QAAQ,CAACW,WAAW,CAAC;MACzCC,aAAa,EAAG,CAAC,IAAI,CAACZ,QAAQ,CAACY,aAAa,CAAC;MAC7CC,cAAc,EAAG,CAAC,IAAI,CAACb,QAAQ,CAACa,cAAc;KAC/C,CAAC;EACJ;;AAvCWnB,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAoB;EAAAC;EAAAC;EAAAC;IAAA;MCZrCC,yBAAG;MAAAA,wCAAwB;MAAAA,iBAAI","names":["Subscription","HardwareDTO","_","HardwareAddEditComponent","constructor","hardwareAddEditService","formBuilder","ngOnInit","onHardwareChangeSub","hardware","subscribe","isEmpty","hardwareForm","createForm","ngOnDestroy","unsubscribe","group","hardwareID","hardwareName","hardwareAddress","hardwareTel","hardwareEmail","hardwareStatus","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Chathura Prasanga\\Desktop\\HOM system\\Front-End\\homs\\src\\app\\components\\hardware\\hardware-add-edit\\hardware-add-edit.component.ts","C:\\Users\\Chathura Prasanga\\Desktop\\HOM system\\Front-End\\homs\\src\\app\\components\\hardware\\hardware-add-edit\\hardware-add-edit.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {HardwareAddEditService} from \"../../../services/hardware/hardware-add-edit.service\";\nimport {Subscription} from \"rxjs\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {HardwareDTO} from \"../dto/hardware\";\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-hardware-add-edit',\n  templateUrl: './hardware-add-edit.component.html',\n  styleUrls: ['./hardware-add-edit.component.css']\n})\nexport class HardwareAddEditComponent implements OnInit, OnDestroy{\n\n  hardwareForm : FormGroup;\n  hardware = new HardwareDTO();\n\n  onHardwareChangeSub = new Subscription();\n\n  constructor(\n    private hardwareAddEditService : HardwareAddEditService,\n    private formBuilder : FormBuilder\n\n  ){}\n\n  ngOnInit(): void {\n    this.onHardwareChangeSub = this.hardwareAddEditService.hardware\n      .subscribe((hardware) => {\n        if (!_.isEmpty(hardware)){\n          this.hardware = new HardwareDTO(hardware);\n        }else {\n          this.hardware = new HardwareDTO();\n        }\n      // console.log(\"hardware\" , this.hardware)\n        this.hardwareForm = this.createForm();\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.onHardwareChangeSub.unsubscribe();\n  }\n\n  createForm(){\n    return this.formBuilder.group({\n      hardwareID: [this.hardware.hardwareID],\n      hardwareName: [this.hardware.hardwareName],\n      hardwareAddress : [this.hardware.hardwareAddress],\n      hardwareTel : [this.hardware.hardwareTel],\n      hardwareEmail : [this.hardware.hardwareEmail],\n      hardwareStatus : [this.hardware.hardwareStatus]\n    })\n  }\n\n}\n","<p>hardware-add-edit works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}