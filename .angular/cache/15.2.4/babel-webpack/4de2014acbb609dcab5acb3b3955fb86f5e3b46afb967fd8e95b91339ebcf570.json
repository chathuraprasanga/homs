{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from \"@angular/forms\";\nimport { OrderDTO } from \"../dto/OrderDTO\";\nimport { Subscription } from \"rxjs\";\nimport * as _ from 'underscore';\nlet OrderAddEditComponent = class OrderAddEditComponent {\n  constructor(orderAddEditService, formBuilder) {\n    this.orderAddEditService = orderAddEditService;\n    this.formBuilder = formBuilder;\n    this.order = new OrderDTO();\n    this.onOrderChangeSub = new Subscription();\n  }\n  ngOnInit() {\n    this.onOrderChangeSub = this.orderAddEditService.order.subscribe(order => {\n      if (!_.isEmpty(order)) {\n        console.log(order);\n        this.order = new OrderDTO(order);\n        this.pageType = 'edit';\n      } else {\n        this.order = new OrderDTO(order);\n        this.pageType = 'new';\n      }\n      // console.log(\"hardware\" , this.hardware)\n      this.orderForm = this.createForm();\n    });\n  }\n  ngOnDestroy() {\n    this.onOrderChangeSub.unsubscribe();\n  }\n  createForm() {\n    return this.formBuilder.group({\n      orderID: [this.order.orderID],\n      invoiceNumber: [this.order.invoiceNumber, [Validators.required]],\n      orderDate: [this.order.orderDate],\n      hardwareName: [this.order.hardwareName],\n      productCode: [this.order.productCode],\n      orderQuantity: [this.order.orderQuantity],\n      orderAmount: [this.order.orderAmount],\n      paymentMethod: [this.order.paymentMethod],\n      paymentStatus: [this.order.paymentStatus]\n    });\n  }\n};\nOrderAddEditComponent = __decorate([Component({\n  selector: 'app-order-add-edit',\n  templateUrl: './order-add-edit.component.html',\n  styleUrls: ['./order-add-edit.component.css']\n})], OrderAddEditComponent);\nexport { OrderAddEditComponent };","map":{"version":3,"mappings":";AAAA,SAAQA,SAAS,QAA0B,eAAe;AAC1D,SAAgCC,UAAU,QAAO,gBAAgB;AACjE,SAAQC,QAAQ,QAAO,iBAAiB;AACxC,SAAQC,YAAY,QAAO,MAAM;AAEjC,OAAO,KAAKC,CAAC,MAAM,YAAY;AAOxB,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAShCC,YACUC,mBAAyC,EACzCC,WAAyB;IADzB,wBAAmB,GAAnBD,mBAAmB;IACnB,gBAAW,GAAXC,WAAW;IAPrB,UAAK,GAAG,IAAIN,QAAQ,EAAE;IAGtB,qBAAgB,GAAG,IAAIC,YAAY,EAAE;EAMnC;EAEFM,QAAQ;IACN,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACH,mBAAmB,CAACI,KAAK,CACnDC,SAAS,CAAED,KAAK,IAAI;MACnB,IAAI,CAACP,CAAC,CAACS,OAAO,CAACF,KAAK,CAAC,EAAC;QACpBG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;QAClB,IAAI,CAACA,KAAK,GAAG,IAAIT,QAAQ,CAACS,KAAK,CAAC;QAChC,IAAI,CAACK,QAAQ,GAAE,MAAM;OACtB,MAAK;QACJ,IAAI,CAACL,KAAK,GAAG,IAAIT,QAAQ,CAACS,KAAK,CAAC;QAChC,IAAI,CAACK,QAAQ,GAAG,KAAK;;MAEvB;MACA,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,UAAU,EAAE;IACpC,CAAC,CAAC;EACN;EAEAC,WAAW;IACT,IAAI,CAACT,gBAAgB,CAACU,WAAW,EAAE;EACrC;EAEAF,UAAU;IACR,OAAO,IAAI,CAACV,WAAW,CAACa,KAAK,CAAC;MAC5BC,OAAO,EAAE,CAAC,IAAI,CAACX,KAAK,CAACW,OAAO,CAAC;MAC7BC,aAAa,EAAE,CAAC,IAAI,CAACZ,KAAK,CAACY,aAAa,EAAC,CAACtB,UAAU,CAACuB,QAAQ,CAAC,CAAC;MAC/DC,SAAS,EAAG,CAAC,IAAI,CAACd,KAAK,CAACc,SAAS,CAAC;MAClCC,YAAY,EAAG,CAAC,IAAI,CAACf,KAAK,CAACe,YAAY,CAAC;MACxCC,WAAW,EAAG,CAAC,IAAI,CAAChB,KAAK,CAACgB,WAAW,CAAC;MACtCC,aAAa,EAAG,CAAC,IAAI,CAACjB,KAAK,CAACiB,aAAa,CAAC;MAC1CC,WAAW,EAAG,CAAC,IAAI,CAAClB,KAAK,CAACkB,WAAW,CAAC;MACtCC,aAAa,EAAG,CAAC,IAAI,CAACnB,KAAK,CAACmB,aAAa,CAAC;MAC1CC,aAAa,EAAG,CAAC,IAAI,CAACpB,KAAK,CAACoB,aAAa;KAC1C,CAAC;EACJ;CAED;AAjDY1B,qBAAqB,eALjCL,SAAS,CAAC;EACTgC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACW7B,qBAAqB,CAiDjC;SAjDYA,qBAAqB","names":["Component","Validators","OrderDTO","Subscription","_","OrderAddEditComponent","constructor","orderAddEditService","formBuilder","ngOnInit","onOrderChangeSub","order","subscribe","isEmpty","console","log","pageType","orderForm","createForm","ngOnDestroy","unsubscribe","group","orderID","invoiceNumber","required","orderDate","hardwareName","productCode","orderQuantity","orderAmount","paymentMethod","paymentStatus","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Chathura Prasanga\\Desktop\\HOM system\\Front-End\\homs\\src\\app\\components\\order\\order-add-edit\\order-add-edit.component.ts"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {OrderDTO} from \"../dto/OrderDTO\";\nimport {Subscription} from \"rxjs\";\nimport {OrderAddEditService} from \"../../../services/order/order-add-edit.service\";\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-order-add-edit',\n  templateUrl: './order-add-edit.component.html',\n  styleUrls: ['./order-add-edit.component.css']\n})\nexport class OrderAddEditComponent implements OnInit,OnDestroy{\n\n\n  orderForm : FormGroup;\n  order = new OrderDTO();\n  pageType: string;\n\n  onOrderChangeSub = new Subscription();\n\n  constructor(\n    private orderAddEditService : OrderAddEditService,\n    private formBuilder : FormBuilder\n\n  ){}\n\n  ngOnInit(): void {\n    this.onOrderChangeSub = this.orderAddEditService.order\n      .subscribe((order) => {\n        if (!_.isEmpty(order)){\n          console.log(order);\n          this.order = new OrderDTO(order);\n          this.pageType ='edit';\n        }else {\n          this.order = new OrderDTO(order);\n          this.pageType = 'new';\n        }\n        // console.log(\"hardware\" , this.hardware)\n        this.orderForm = this.createForm();\n      })\n  }\n\n  ngOnDestroy(): void {\n    this.onOrderChangeSub.unsubscribe();\n  }\n\n  createForm(){\n    return this.formBuilder.group({\n      orderID: [this.order.orderID],\n      invoiceNumber: [this.order.invoiceNumber,[Validators.required]],\n      orderDate : [this.order.orderDate],\n      hardwareName : [this.order.hardwareName],\n      productCode : [this.order.productCode],\n      orderQuantity : [this.order.orderQuantity],\n      orderAmount : [this.order.orderAmount],\n      paymentMethod : [this.order.paymentMethod],\n      paymentStatus : [this.order.paymentStatus]\n    })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}